{"ast":null,"code":"var _jsxFileName = \"/Users/noamwa/Desktop/PortfolYo/portfolyo/client/src/components/Dashboard/Dashboard.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Layout from '../../containers/Layout';\nimport SocialButtonList from '../SocialButtonList/SocialButtonList';\nimport SocialProfileList from '../SocialProfileList/SocialProfileList';\nimport { auth } from '../../firebase';\nimport './Dashboard.css';\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      buttonList: {\n        github: {\n          visible: true,\n          provider: () => {\n            const provider = auth.githubOAuth();\n            provider.addScope('user');\n            return provider;\n          }\n        },\n        google: {\n          visible: true,\n          provider: () => auth.googleOAuth()\n        },\n        facebook: {\n          visible: true,\n          provider: () => auth.facebookOAuth()\n        }\n      },\n      providerData: this.props.providerData\n    };\n\n    this.handleCurrentProviders = providerData => {\n      this.updateProviders(providerData);\n    };\n\n    this.updateProviders = providerData => {\n      let buttonList = { ...this.state.buttonList\n      };\n      providerData.forEach(provider => {\n        const providerName = provider.providerId.split('.')[0];\n        buttonList = this.updateButtonList(buttonList, providerName, false);\n      });\n      this.setState({\n        buttonList,\n        providerData\n      });\n    };\n\n    this.handleUnliknedProvider = (providerName, providerData) => {\n      if (providerData.length < 1) {\n        auth.getAuth().currentUser.delete().then(() => console.log('User Deleted')).catch(() => console.error('Error deleting user'));\n      }\n\n      let buttonList = { ...this.state.buttonList\n      };\n      buttonList = this.updateButtonList(buttonList, providerName, true);\n      this.setState({\n        buttonList,\n        providerData\n      });\n    };\n\n    this.updateButtonList = (buttonList, providerName, visible) => ({ ...buttonList,\n      [providerName]: { ...buttonList[providerName],\n        visible\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.updateProviders(this.state.providerData);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(SocialProfileList, {\n      auth: auth.getAuth,\n      providerData: this.state.providerData,\n      unlinkedProvider: this.handleUnliknedProvider,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Connect Other Social Accounts\")), React.createElement(SocialButtonList, {\n      buttonList: this.state.buttonList,\n      auth: auth.getAuth,\n      currentProviders: this.handleCurrentProviders,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn__logout\",\n      onClick: () => auth.getAuth().signOut(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Logout\"));\n  }\n\n}\n\nDashboard.propTypes = {\n  providerData: PropTypes.arrayOf(PropTypes.object).isRequired\n};\nDashboard.defaultProps = {\n  providerData: []\n};\nexport default Dashboard;","map":{"version":3,"sources":["/Users/noamwa/Desktop/PortfolYo/portfolyo/client/src/components/Dashboard/Dashboard.js"],"names":["React","Component","PropTypes","Layout","SocialButtonList","SocialProfileList","auth","Dashboard","state","buttonList","github","visible","provider","githubOAuth","addScope","google","googleOAuth","facebook","facebookOAuth","providerData","props","handleCurrentProviders","updateProviders","forEach","providerName","providerId","split","updateButtonList","setState","handleUnliknedProvider","length","getAuth","currentUser","delete","then","console","log","catch","error","componentDidMount","render","textAlign","signOut","propTypes","arrayOf","object","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Layout from '../../containers/Layout';\nimport SocialButtonList from '../SocialButtonList/SocialButtonList';\nimport SocialProfileList from '../SocialProfileList/SocialProfileList';\nimport { auth } from '../../firebase';\nimport './Dashboard.css';\n\nclass Dashboard extends Component {\n\n  static propTypes = {\n    providerData: PropTypes.arrayOf(PropTypes.object).isRequired\n  };\n\n  static defaultProps = {\n    providerData: []\n  };\n\n  state = {\n    buttonList: {\n      github: {\n        visible: true,\n        provider: () => {\n          const provider = auth.githubOAuth();\n          provider.addScope('user');\n          return provider;\n        }\n      },\n      google: {\n        visible: true,\n        provider: () => auth.googleOAuth()\n      },\n      facebook: {\n        visible: true,\n        provider: () => auth.facebookOAuth()\n      }\n    },\n    providerData: this.props.providerData\n  };\n\n  componentDidMount() {\n    this.updateProviders(this.state.providerData);\n  }\n\n  handleCurrentProviders = providerData => {\n    this.updateProviders(providerData);\n  };\n\n  updateProviders = providerData => {\n    let buttonList = { ...this.state.buttonList };\n\n    providerData.forEach(provider => {\n      const providerName = provider.providerId.split('.')[0];\n      buttonList = this.updateButtonList(buttonList, providerName, false);\n    });\n\n    this.setState({ buttonList, providerData });\n  };\n\n  handleUnliknedProvider = (providerName, providerData) => {\n    if (providerData.length < 1) {\n      auth\n        .getAuth()\n        .currentUser.delete()\n        .then(() => console.log('User Deleted'))\n        .catch(() => console.error('Error deleting user'));\n    }\n\n    let buttonList = { ...this.state.buttonList };\n    buttonList = this.updateButtonList(buttonList, providerName, true);\n\n    this.setState({ buttonList, providerData });\n  };\n\n  updateButtonList = (buttonList, providerName, visible) => ({\n    ...buttonList,\n    [providerName]: {\n      ...buttonList[providerName],\n      visible\n    }\n  });\n\n  render() {\n    return (\n      <div>\n        <SocialProfileList\n          auth={auth.getAuth}\n          providerData={this.state.providerData}\n          unlinkedProvider={this.handleUnliknedProvider}\n        />\n        <p style={{ textAlign: 'center' }}>\n          <strong>Connect Other Social Accounts</strong>\n        </p>\n        <SocialButtonList\n          buttonList={this.state.buttonList}\n          auth={auth.getAuth}\n          currentProviders={this.handleCurrentProviders}\n        />\n        <button\n          className=\"btn__logout\"\n          onClick={() => auth.getAuth().signOut()}\n        >\n          Logout\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}