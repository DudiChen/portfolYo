{"ast":null,"code":"var _jsxFileName = \"/Users/noamwa/Desktop/PortfolYo/portfolyo/client/src/components/SocialProfileList/SocialProfileList.js\";\nimport React, { PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport './SocialProfileList.css';\n\nclass SocialProfileList extends PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    this.handleProviderUnlink = async (e, provider) => {\n      const {\n        auth,\n        unlinkedProvider\n      } = this.props;\n\n      if (window.confirm(`Do you really want to unlink ${provider}?`)) {\n        const providers = await auth().currentUser.unlink(`${provider}.com`).catch(err => console.error(err));\n        unlinkedProvider(provider, providers.providerData);\n      }\n    };\n\n    this.renderProfileList = ({\n      providerId,\n      photoURL\n    }) => {\n      const providerName = providerId.split('.')[0];\n      return React.createElement(\"div\", {\n        className: \"container__profile\",\n        key: providerName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: photoURL,\n        alt: providerName,\n        className: \"container__profile--photo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, providerName), React.createElement(\"button\", {\n        className: \"container__profile--btn\",\n        onClick: e => this.handleProviderUnlink(e, providerName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Unlink\"));\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"text--center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Connected Social Accounts\")), React.createElement(\"div\", {\n      className: \"btn__profiles--list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.props.providerData.map(this.renderProfileList)));\n  }\n\n}\n\nSocialProfileList.propTypes = {\n  auth: PropTypes.func.isRequired,\n  providerData: PropTypes.arrayOf(PropTypes.object).isRequired,\n  unlinkedProvider: PropTypes.func.isRequired\n};\nexport default SocialProfileList;","map":{"version":3,"sources":["/Users/noamwa/Desktop/PortfolYo/portfolyo/client/src/components/SocialProfileList/SocialProfileList.js"],"names":["React","PureComponent","Fragment","PropTypes","SocialProfileList","handleProviderUnlink","e","provider","auth","unlinkedProvider","props","window","confirm","providers","currentUser","unlink","catch","err","console","error","providerData","renderProfileList","providerId","photoURL","providerName","split","render","map","propTypes","func","isRequired","arrayOf","object"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,yBAAP;;AAEA,MAAMC,iBAAN,SAAgCH,aAAhC,CAA8C;AAAA;AAAA;;AAAA,SAU5CI,oBAV4C,GAUrB,OAAOC,CAAP,EAAUC,QAAV,KAAuB;AAC5C,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAA6B,KAAKC,KAAxC;;AAEA,UAAIC,MAAM,CAACC,OAAP,CAAgB,gCAA+BL,QAAS,GAAxD,CAAJ,EAAiE;AAC/D,cAAMM,SAAS,GAAG,MAAML,IAAI,GACzBM,WADqB,CACTC,MADS,CACD,GAAER,QAAS,MADV,EAErBS,KAFqB,CAEfC,GAAG,IAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAFQ,CAAxB;AAIAR,QAAAA,gBAAgB,CAACF,QAAD,EAAWM,SAAS,CAACO,YAArB,CAAhB;AACD;AACF,KApB2C;;AAAA,SAsB5CC,iBAtB4C,GAsBxB,CAAC;AAAEC,MAAAA,UAAF;AAAcC,MAAAA;AAAd,KAAD,KAA8B;AAChD,YAAMC,YAAY,GAAGF,UAAU,CAACG,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAArB;AAEA,aACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAoC,QAAA,GAAG,EAAED,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,GAAG,EAAED,QADP;AAEE,QAAA,GAAG,EAAEC,YAFP;AAGE,QAAA,SAAS,EAAC,2BAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIA,YAAJ,CANF,EAOE;AACE,QAAA,SAAS,EAAC,yBADZ;AAEE,QAAA,OAAO,EAAElB,CAAC,IAAI,KAAKD,oBAAL,CAA0BC,CAA1B,EAA6BkB,YAA7B,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,CADF;AAgBD,KAzC2C;AAAA;;AA2C5CE,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKhB,KAAL,CAAWU,YAAX,CAAwBO,GAAxB,CAA4B,KAAKN,iBAAjC,CADH,CAJF,CADF;AAUD;;AAtD2C;;AAAxCjB,iB,CACGwB,S,GAAY;AACjBpB,EAAAA,IAAI,EAAEL,SAAS,CAAC0B,IAAV,CAAeC,UADJ;AAEjBV,EAAAA,YAAY,EAAEjB,SAAS,CAAC4B,OAAV,CAAkB5B,SAAS,CAAC6B,MAA5B,EAAoCF,UAFjC;AAGjBrB,EAAAA,gBAAgB,EAAEN,SAAS,CAAC0B,IAAV,CAAeC;AAHhB,C;AAwDrB,eAAe1B,iBAAf","sourcesContent":["import React, { PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SocialProfileList.css';\n\nclass SocialProfileList extends PureComponent { // since we use this only in Dashboard we save renders by comparing the props and state instead of rednering it\n  static propTypes = {\n    auth: PropTypes.func.isRequired,\n    providerData: PropTypes.arrayOf(PropTypes.object).isRequired,\n    unlinkedProvider: PropTypes.func.isRequired\n  };\n\n  /**\n   * Unlinks a provider from the current user account\n   */\n  handleProviderUnlink = async (e, provider) => {\n    const { auth, unlinkedProvider } = this.props;\n\n    if (window.confirm(`Do you really want to unlink ${provider}?`)) {\n      const providers = await auth()\n        .currentUser.unlink(`${provider}.com`)\n        .catch(err => console.error(err));\n\n      unlinkedProvider(provider, providers.providerData);\n    }\n  };\n\n  renderProfileList = ({ providerId, photoURL }) => {\n    const providerName = providerId.split('.')[0];\n\n    return (\n      <div className=\"container__profile\" key={providerName}>\n        <img\n          src={photoURL}\n          alt={providerName}\n          className=\"container__profile--photo\"\n        />\n        <p>{providerName}</p>\n        <button\n          className=\"container__profile--btn\"\n          onClick={e => this.handleProviderUnlink(e, providerName)}\n        >\n          Unlink\n        </button>\n      </div>\n    );\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <p className=\"text--center\">\n          <strong>Connected Social Accounts</strong>\n        </p>\n        <div className=\"btn__profiles--list\">\n          {this.props.providerData.map(this.renderProfileList)}\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default SocialProfileList;"]},"metadata":{},"sourceType":"module"}